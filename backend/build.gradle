plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // 개발 중 자동 재시작을 위한 Spring Boot DevTools (개발 환경에서 매우 유용)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Boot WebFlux 의존성: WebClient를 사용하여 Ollama API 호출에 필요
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Spring Boot Web 의존성 (RESTful API 개발에 필요)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Lombok (옵션: 보일러플레이트 코드 줄이기)
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'


    // 테스트 관련
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    // JWT (JSON Web Token) API: 토큰 생성 및 검증에 필요
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // JWT API

    // Jakarta Annotation API: @PostConstruct 등 일부 어노테이션 사용에 필요
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    // JWT 구현체
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JWT JSON 파서 (Jackson 사용 시)

    // 설치된 MySQL Server 버전에 맞는 드라이버 버전을 확인하여 사용하세요.
    implementation 'mysql:mysql-connector-java:8.0.33'

    // Spring Security Cryptographic: 비밀번호 암호화(BCrypt)를 위해 필요
    implementation 'org.springframework.security:spring-security-crypto'

    // 개발 중 자동 재시작을 위한 Spring Boot DevTools (선택 사항이지만 개발에 매우 유용)
    // 코드를 변경할 때마다 서버를 수동으로 재시작할 필요 없이 자동으로 애플리케이션을 다시 로드해줍니다.
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    // Spring Boot JDBC: JdbcTemplate을 사용하여 데이터베이스에 접근하기 위해 필요
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
}

tasks.named('test') {
    useJUnitPlatform()
}
